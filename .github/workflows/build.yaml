name: Luccakube
run-name: Luccakube on GitHub Actions ðŸš€
on:
  pull_request:
    branches:
      - "*"
  push:
    tags:
      - "*"
jobs:
  create-matrix:
      runs-on: ubuntu-latest
      outputs:
        create-clusters-matrix: ${{ steps.set-matrix.outputs.create-clusters-matrix }}
        need-create-clusters: ${{ fromJson(steps.set-matrix.outputs.need-create-clusters) }}
        update-clusters-matrix: ${{ steps.set-matrix.outputs.update-clusters-matrix }}
        need-update-clusters: ${{ fromJson(steps.set-matrix.outputs.need-update-clusters) }}
        is-ephemeral: ${{ fromJson(steps.set-matrix.outputs.is-ephemeral) }}
        max-parallel: ${{ steps.set-matrix.outputs.max-parallel }}
      # permissions: TODO
      steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .gitops/requirements.txt
      - name: TODO - Check file name according cluster name
        run: echo 'python3 .gitops/check-filename.py'
      - id: set-matrix
        name: Set matrix
        run: python3 .gitops/create-matrix.py
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
  create-cluster:
    name: ${{ matrix.ClusterName }} (create)
    needs: create-matrix
    # TODO check matrix instead of boolean value
    if:  ${{ fromJson(needs.create-matrix.outputs.need-create-clusters) }}
    runs-on: ubuntu-latest
    concurrency: ${{ matrix.ClusterName }}
    strategy:
      matrix: ${{ fromJson(needs.create-matrix.outputs.create-clusters-matrix) }}
      max-parallel: ${{ fromJson(needs.create-matrix.outputs.max-parallel) }}
    environment: 
      name: ${{ matrix.ClusterName }}
      url: https://${{ matrix.ClusterName }}.luccakube.tech
    steps:
    - name: ${{ matrix.ChangeType }} ${{ matrix.ClusterName }}
      run: |
        curl -Ls \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ github.token }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        ${{ matrix.ManifestUrl }} -o ${{ matrix.ClusterName }}.yaml
        cat ${{ matrix.ClusterName }}.yaml
      env:
        TALOS_SECRETS_BUNDLE: ${{ secrets.TALOS_SECRETS_BUNDLE }}
        OS_AUTH_URL: ${{ vars.OS_AUTH_URL }}
        OS_IDENTITY_API_VERSION: ${{ vars.OS_IDENTITY_API_VERSION }}
        OS_DOMAIN_NAME: ${{ vars.OS_DOMAIN_NAME }}
        OS_TENANT_ID: ${{ secrets.OS_TENANT_ID }}
        OS_TENANT_NAME: ${{ secrets.OS_TENANT_NAME }}
        OS_USERNAME: ${{ secrets.OS_USERNAME }}
        OS_PASSWORD: ${{ secrets.OS_PASSWORD }}
        OS_REGION_NAME: ${{ vars.OS_REGION_NAME }}
        OVH_API_CREDS: ${{ secrets.OVH_API_CREDS }}
  update-cluster:
    name: ${{ matrix.ClusterName }} (update)
    needs: ["create-matrix", "create-cluster"]
    # TODO check matrix instead of boolean value
    if: ${{ fromJson(needs.create-matrix.outputs.need-update-clusters) }}
    runs-on: ubuntu-latest
    concurrency: ${{ matrix.ClusterName }}
    strategy:
      matrix: ${{ fromJson(needs.create-matrix.outputs.update-clusters-matrix) }}
      max-parallel: ${{ fromJson(needs.create-matrix.outputs.max-parallel) }}
    environment: 
      name: ${{ matrix.ClusterName }}
      url: https://${{ matrix.ClusterName }}.luccakube.tech
    steps:
    - name: ${{ matrix.ChangeType }} ${{ matrix.ClusterName }}
      run: |
        curl -Ls \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ github.token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          ${{ matrix.ManifestUrl }} -o ${{ matrix.ClusterName }}.yaml
        cat ${{ matrix.ClusterName }}.yaml
      env:
        TALOS_SECRETS_BUNDLE: ${{ secrets.TALOS_SECRETS_BUNDLE }}
        OS_AUTH_URL: ${{ vars.OS_AUTH_URL }}
        OS_IDENTITY_API_VERSION: ${{ vars.OS_IDENTITY_API_VERSION }}
        OS_DOMAIN_NAME: ${{ vars.OS_DOMAIN_NAME }}
        OS_TENANT_ID: ${{ secrets.OS_TENANT_ID }}
        OS_TENANT_NAME: ${{ secrets.OS_TENANT_NAME }}
        OS_USERNAME: ${{ secrets.OS_USERNAME }}
        OS_PASSWORD: ${{ secrets.OS_PASSWORD }}
        OS_REGION_NAME: ${{ vars.OS_REGION_NAME }}
        OVH_API_CREDS: ${{ secrets.OVH_API_CREDS }}
  cleanup-ephemaral-clusters:
    name: Cleanup ephemeral environments
    needs: ["create-matrix", "create-cluster", "update-cluster"]
    if: ${{ needs.create-matrix.outputs.create-clusters-matrix != '' && needs.create-matrix.outputs.is-ephemeral }}
    runs-on: ubuntu-latest
    steps:
    - name: Cleanup ephemeral environments
      run: echo "Cleanup ephemeral environments ${{ toJson(needs.create-matrix.outputs.create-clusters-matrix) }}"