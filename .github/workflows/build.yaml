name: LuccaKube.GitOps ðŸ’«
run-name: LuccaKube.GitOps ðŸ’«
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "main"
jobs:
  ci-checks:
    name: CI checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install Python dependencies
      run: pip install -r .gitops/requirements.txt
    - name: Check files names according clusters names
      run: python .gitops/ci-checks.py --check-files-names
  pre-deploy:
    name: Pre-deploy
    needs: ci-checks
    runs-on: ubuntu-latest
    outputs:
      create-clusters-matrix: ${{ steps.set-matrix.outputs.create-clusters-matrix }}
      need-create-clusters: ${{ fromJson(steps.set-matrix.outputs.need-create-clusters) }}
      update-clusters-matrix: ${{ steps.set-matrix.outputs.update-clusters-matrix }}
      need-update-clusters: ${{ fromJson(steps.set-matrix.outputs.need-update-clusters) }}
      is-ephemeral: ${{ fromJson(steps.set-matrix.outputs.is-ephemeral) }}
      max-parallel: ${{ steps.set-matrix.outputs.max-parallel }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r .gitops/requirements.txt
    - id: set-matrix
      name: Set clusters matrix
      run: python3 .gitops/create-matrix.py
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
  dryrun-cluster:
    name: ${{ matrix.ClusterName }} (dryrun)
    needs: pre-deploy
    # TODO check matrix instead of boolean value
    if:  ${{ fromJson(needs.pre-deploy.outputs.need-create-clusters) }}
    runs-on: ubuntu-latest
    concurrency: ${{ matrix.ClusterName }}
    strategy:
      matrix: ${{ fromJson(needs.pre-deploy.outputs.create-clusters-matrix) }}
      max-parallel: ${{ fromJson(needs.pre-deploy.outputs.max-parallel) }}
    environment: 
      name: ${{ matrix.ClusterName }}
      url: https://${{ matrix.ClusterName }}.luccakube.tech
    steps:
    - name: dryrun ${{ matrix.ClusterName }}
      run: |
        curl -sL \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ github.token }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        ${{ matrix.ManifestUrl }} -o ${{ matrix.ClusterName }}.yaml
        cat ${{ matrix.ClusterName }}.yaml
        echo '## ðŸ§ª Dryrun on ${{ matrix.ClusterName }}' >> $GITHUB_STEP_SUMMARY
        echo 'These changes will be applied: ' >> $GITHUB_STEP_SUMMARY
        echo '* Talos v1.5 => v1.6' >> $GITHUB_STEP_SUMMARY
        echo '* Kubernetes v1.27.1 => v1.27.3' >> $GITHUB_STEP_SUMMARY
        echo '* Number of nodes:' >> $GITHUB_STEP_SUMMARY
        echo '  * ControlPlanes: 3 => 4' >> $GITHUB_STEP_SUMMARY
        echo '  * Workers: 8 => 12' >> $GITHUB_STEP_SUMMARY
  create-cluster:
    name: ${{ matrix.ClusterName }} (create)
    needs: [pre-deploy, dryrun-cluster]
    # TODO check matrix instead of boolean value
    if:  ${{ fromJson(needs.pre-deploy.outputs.need-create-clusters) }}
    runs-on: ubuntu-latest
    concurrency: ${{ matrix.ClusterName }}
    strategy:
      matrix: ${{ fromJson(needs.pre-deploy.outputs.create-clusters-matrix) }}
      max-parallel: ${{ fromJson(needs.pre-deploy.outputs.max-parallel) }}
    environment: 
      name: ${{ matrix.ClusterName }}
      url: https://${{ matrix.ClusterName }}.luccakube.tech
    steps:
    - name: ${{ matrix.ChangeType }} ${{ matrix.ClusterName }}
      run: |
        curl -sL \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ github.token }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        ${{ matrix.ManifestUrl }} -o ${{ matrix.ClusterName }}.yaml
        cat ${{ matrix.ClusterName }}.yaml
  update-cluster:
    name: ${{ matrix.ClusterName }} (update)
    needs: ["pre-deploy", "create-cluster", "dryrun-cluster"]
    # TODO check matrix instead of boolean value
    if: ${{ fromJson(needs.pre-deploy.outputs.need-update-clusters) }}
    runs-on: ubuntu-latest
    concurrency: ${{ matrix.ClusterName }}
    strategy:
      matrix: ${{ fromJson(needs.pre-deploy.outputs.update-clusters-matrix) }}
      max-parallel: ${{ fromJson(needs.pre-deploy.outputs.max-parallel) }}
    environment: 
      name: ${{ matrix.ClusterName }}
      url: https://${{ matrix.ClusterName }}.luccakube.tech
    steps:
    - name: ${{ matrix.ChangeType }} ${{ matrix.ClusterName }}
      run: |
        curl -sL \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ github.token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          ${{ matrix.ManifestUrl }} -o ${{ matrix.ClusterName }}.yaml
        cat ${{ matrix.ClusterName }}.yaml
  cleanup-ephemaral-clusters:
    name: Cleanup ephemeral environments
    needs: ["pre-deploy", "create-cluster", "update-cluster"]
    if: ${{ needs.pre-deploy.outputs.create-clusters-matrix != '' && needs.pre-deploy.outputs.is-ephemeral }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install Python dependencies
      run: pip install -r .gitops/requirements.txt
    - name: Cleanup ephemeral environments
      run: python .gitops/cleanup-environments.py
      env:
        CLUSTERS_MATRIX: ${{ toJson(needs.pre-deploy.outputs.create-clusters-matrix) }}
        GITHUB_APP_ID: ${{ secrets.ENVCLEANER_APP_ID }}
        GITHUB_APP_PRIVATE_KEY: ${{ secrets.ENVCLEANER_APP_PRIVATE_KEY }}